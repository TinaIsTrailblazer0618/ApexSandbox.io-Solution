public List<Account> getAccounts(List<Account> accounts) {
    if (accounts == null) {
        return null;
    }

    List<AccountWrapper> accountList = new List<AccountWrapper>();
    List<Account> returnAccounts = new List<Account>();

    for (Account account : accounts) {
        accountList.add(new AccountWrapper(account));
    }
    accountList.sort();

    for (AccountWrapper accountWrapper : accountList) {
        returnAccounts.add(accountWrapper.account);
    }
    return returnAccounts;
}
// write extra class here 
public class AccountWrapper implements Comparable {
    public Account account;

    public AccountWrapper(Account acct) {
        account = acct;
    }

    public Integer compareTo(Object compareTo) {
        AccountWrapper compareToAccount = (AccountWrapper) compareTo;
        Integer returnValue = 0;
        if (
            account.AnnualRevenue > compareToAccount.account.AnnualRevenue
        ) {
            returnValue = -1;
        } else if (
            account.AnnualRevenue < compareToAccount.account.AnnualRevenue
        ) {
            returnValue = 1;
        } else if (
            (account.AnnualRevenue) == null &&
            (compareToAccount.account.AnnualRevenue != null)
        ) {
            returnValue = -1;
        } else if (
            (account.AnnualRevenue) != null &&
            (compareToAccount.account.AnnualRevenue == null)
        ) {
            returnValue = 1;
        }
        return returnValue;
    }
}