public static Integer longestDistinctSubstring(String str, Integer k){ 
    //solution here
    if (k > str.length()) {
        return str.length();
    }

    Integer left = 0;
    Integer answer = 0;
    Map<Integer, Integer> dic = new Map<Integer, Integer>();

    for (Integer right = 0; right < str.length(); right++) {
        Integer char = str.charAt(right);
        if (dic.containsKey(char)) {
            dic.put(char, dic.get(char) + 1);
        } else {
            dic.put(char, 1);
        }

        while (dic.size() > k) {
            Integer charToRemove = str.charAt(left);
            if (dic.get(charToRemove) == 0) {
                dic.remove(charToRemove);
            } else {
                dic.put(charToRemove, dic.get(charToRemove) - 1);
            }
            left++;
        }

        answer = math.max(answer, right - left + 1);
    }

    return answer;
}