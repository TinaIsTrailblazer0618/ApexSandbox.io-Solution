public static Integer longestDistinctSubstring(String str, Integer k){ 
    Integer left = 0;
    Integer answer = 0;
    Map<Integer> characters = new Map<Integer>();

    for (Integer right = 0; right < str.length(); right++) {
        if (!characters.containsKey(str.charAt(right))) {
            characters.put(
                str.charAt(right), 
                characters.get(str.charAt(right) + 1);
        } else {
            characters.put(str.charAt(right), 1);
        }

        while (characters.size() > k) {
            if (characters.containsKey(str.charAt(left))) {
                characters.put(
                    str.charAt(left),
                    characters.get(str.charAt(left) - 1);
            }
            if (characters.get(str.charAt(left)) == 0) {
                characters.remove(charAt(left));
            }
            left++;
        }
        
        answer = Math.max(answer, right - left + 1);
    }

    return answer;
}